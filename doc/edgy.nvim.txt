*edgy.nvim.txt*          For Neovim >= 0.8.0         Last change: 2023 June 05

==============================================================================
Table of Contents                                *edgy.nvim-table-of-contents*

1. ðŸªŸ edgy.nvim                                   |edgy.nvim-ðŸªŸ-edgy.nvim|
  - Features                               |edgy.nvim-ðŸªŸ-edgy.nvim-features|
  - Installation                       |edgy.nvim-ðŸªŸ-edgy.nvim-installation|
  - Configuration                     |edgy.nvim-ðŸªŸ-edgy.nvim-configuration|
  - ðŸªŸ Example Setup           |edgy.nvim-ðŸªŸ-edgy.nvim-ðŸªŸ-example-setup|

==============================================================================
1. ðŸªŸ edgy.nvim                                   *edgy.nvim-ðŸªŸ-edgy.nvim*

A Neovim plugin to easily create and manage predefined window layouts, bringing
a new edge to your workflow.


FEATURES                                   *edgy.nvim-ðŸªŸ-edgy.nvim-features*

- Automatically move windows (including floating windows) in a pre-defined layout
- Custom window options for **edgebar** windows
- Custom buffer-local keymaps for **edgebar** windows
- Pretty animations


INSTALLATION                           *edgy.nvim-ðŸªŸ-edgy.nvim-installation*

Install the plugin with your preferred package manager:

>lua
    {
      "folke/edgy.nvim",
      event = "VeryLazy",
      opts = {}
    }
<


CONFIGURATION                         *edgy.nvim-ðŸªŸ-edgy.nvim-configuration*

**edgy.nvim** comes with the following defaults:

>lua
    {
      left = {}, ---@type (Edgy.View.Opts|string)[]
      bottom = {}, ---@type (Edgy.View.Opts|string)[]
      right = {}, ---@type (Edgy.View.Opts|string)[]
      top = {}, ---@type (Edgy.View.Opts|string)[]
    
      ---@type table<Edgy.Pos, {size:integer, wo?:vim.wo}>
      options = {
        left = { size = 30 },
        bottom = { size = 10 },
        right = { size = 30 },
        top = { size = 10 },
      },
      -- edgebar animations
      animate = {
        enabled = true,
        fps = 100, -- frames per second
        cps = 120, -- cells per second
        on_begin = function()
          vim.g.minianimate_disable = true
        end,
        on_end = function()
          vim.g.minianimate_disable = false
        end,
      },
      -- global window options for sidebar windows
      ---@type vim.wo
      wo = {
        winbar = true,
        winfixwidth = true,
        winfixheight = false,
        winhighlight = "WinBar:EdgyWinBar,Normal:EdgyNormal",
        spell = false,
        signcolumn = "no",
      },
      -- buffer-local keymaps to be added to sidebar buffers.
      -- Existing buffer-local keymaps will never be overridden.
      -- Set to false to disable a builtin.
      ---@type table<string, fun(win:Edgy.Window)|false>
      keys = {
        ["q"] = function(win)
          win:close()
        end,
        ["<c-q>"] = function(win)
          win:hide()
        end,
        ["Q"] = function(win)
          win.view.sidebar:close()
        end,
      },
      icons = {
        closed = " ",
        open = " ",
      },
      -- enable this on Neovim <= 0.10.0 to properly fold sidebar windows.
      -- Not needed on a nightly build >= June 5, 2023.
      fix_win_height = vim.fn.has("nvim-0.10.0") == 0,
    }
<

**Edgy.View.Opts**

>lua
    ---@class Edgy.View.Opts
    ---@field ft string
    ---@field filter? fun(buf:buffer, win:window):boolean?
    ---@field title? string
    ---@field size? Edgy.Size
    -- When a view is pinned, it will always be shown
    -- in the sidebar, even if it has no windows.
    ---@field pinned? boolean
    -- Open function or command to open a pinned view
    ---@field open? fun()|string
    ---@field wo? vim.wo View specific window options
<


ðŸªŸ EXAMPLE SETUP               *edgy.nvim-ðŸªŸ-edgy.nvim-ðŸªŸ-example-setup*

>lua
    {
      "folke/edgy.nvim",
      event = "VeryLazy",
      opts = {
        bottom = {
          -- toggleterm / lazyterm at the bottom with a height of 40% of the screen
          { ft = "toggleterm", size = { height = 0.4 } },
          {
            ft = "lazyterm",
            title = "LazyTerm",
            size = { height = 0.4 },
            filter = function(buf)
              return not vim.b[buf].lazyterm_cmd
            end,
          },
          "Trouble",
          { ft = "qf", title = "QuickFix" },
          { ft = "help", size = { height = 20 } },
          { ft = "spectre_panel", size = { height = 0.4 } },
        },
        left = {
          -- Neo-tree filesystem always takes half the screen height
          {
            title = "Neo-Tree",
            ft = "neo-tree",
            filter = function(buf)
              return vim.b[buf].neo_tree_source == "filesystem"
            end,
            size = { height = 0.5 },
          },
          {
            title = "Neo-Tree Git",
            ft = "neo-tree",
            filter = function(buf)
              return vim.b[buf].neo_tree_source == "git_status"
            end,
            pinned = true,
            open = "Neotree position=right git_status",
          },
          {
            title = "Neo-Tree Buffers",
            ft = "neo-tree",
            filter = function(buf)
              return vim.b[buf].neo_tree_source == "buffers"
            end,
            pinned = true,
            open = "Neotree position=top buffers",
          },
          {
            ft = "Outline",
            pinned = true,
            open = "SymbolsOutline",
          },
          -- any other neo-tree windows
          "neo-tree",
        },
      },
    }
<

==============================================================================
2. Links                                                     *edgy.nvim-links*

1. *image*: https://github.com/folke/edgy.nvim/assets/292349/35e2b30c-4099-4f37-8830-48584529bfd5

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
